#!/usr/bin/perl -w

#DOMAIN : vlook.cn
#AUTHOR : eotect <eotect@myplace>
#CREATED: 2015-03-18 00:17
#UPDATED: 2015-03-18 00:17
#TARGET : http://www.vlook.cn/ta/qs/dWlkPTQ1ODA3MDU=

use strict;
no warnings 'redefine';


=method1
sub apply_rule {
 return (
 #Set quick parsing method on
       '#use quick parse'=>1,

#Specify data mining method
       'data_exp'=>undef,
       'data_map'=>undef,

#Specify data mining method for nextlevel
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,

#Specify pages mining method
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,

       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
 );
}
=cut

use MyPlace::URLRule::Utils qw/get_url/;

sub apply_rule {
    my ($url,$rule) = @_;

	my %i;
	if($url =~ m/\/qs\/VBOX_([^\/]+)/) {
		$url = "http://www.vlook.cn/videoBox/qs/$1";
	}
	if($url =~ m/\/videoBox\/qs\/([^\/]+)/) {
		$i{qs} = $1;
		$i{uid} = 'VBOX_' . $1;
		$i{id} = $1;
	}
	elsif($url =~ m/\/qs\/([^\/\?\&]+)/) {
		$i{qs} = $1;
		$i{uid} =  $1;
		$i{id} = $1;
	}
	else {
		return (
			count=>0,
			error=>"Invalid URL",
		);
	}
	my $html = get_url($url,'-v');
	if($url =~ m/\/videoBox\/qs\/([^\/]+)/) {
		$i{uid} = 'VBOX_' . $1;
		$i{url} = 'http://www.vlook.cn/videoBox/qs/' . $1;
		if($html =~ m/<div[^>]+class="detail_op"[^>]+_data="{boxId:(\d+),name:'([^']+)'/) {
			$i{boxId} = $1;
			$i{uname} = $2;
		}
	}
	else {
	    foreach(split(/\n/,$html)) {
			if(!$i{uname} and m/<span class="font1">([^<>]+)/) {
				$i{uname} = $1;
				$i{uname} =~ s/@[^@]+$//;
				$i{uname} =~ s/[\r\n\s]+//g;
			}
			if(!$i{uid} and m/<a[^>]+href="\/ta\/video\/qs\/([^\/"]+)"[^>]+id="selected"/) {
				$i{uid} = $1;
			}
			last if($i{uid} and $i{uname});
		}
		$i{url} = 'http://www.vlook.cn/ta/qs/' . $i{uid};
	}
	$i{profile} = $i{uid};
	$i{host} = 'vlook.cn';
	return %i;
}

=cut

1;

__END__

#       vim:filetype=perl



