#!/usr/bin/perl -w
#DOMAIN : 555duo.net
#AUTHOR : xiaoranzzz <xiaoranzzz@MYPLACE>
#CREATED: 2020-01-07 01:48
#UPDATED: 2020-01-07 01:48
#TARGET : https://www.555duo.net/a/html/4623.html
#URLRULE: 2.0
package MyPlace::URLRule::Rule::0_555duo_net;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

=method1
sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
	   'data_exp'=>undef,
	   'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}
=cut

use MyPlace::WWW::Utils qw/get_url get_safename url_getname/;

sub apply_rule {
	my $self = shift;
    my ($url,$rule) = @_;
	my $html = get_url($url,'-v','charset:gb2312');
    my $title = undef;
    my @data;
    my @pass_data;
    my @html = split(/\n/,$html);
	my %a;
	foreach(@html) {
		if(m/<h1>([^<]+)/){
			$a{content} = $1;
		}
		elsif(m/<a[^>]+['"](https?:\/\/[^>]+\.(zip|rar|7z|mp4|mpg|flv))["']/) {
			$a{download} = $1;
			$a{ext}=$2;
		}
		last if($a{content} and $a{download});
	}
	if($a{content} and $a{download}) {
		@data = ($a{download} . "\t" . get_safename($a{content}) . "." . $a{ext});
	}
	elsif($a{download}) {
		@data = ($a{download});
	}
    return (
        count=>scalar(@data),
        data=>\@data,
        pass_count=>scalar(@pass_data),
        pass_data=>\@pass_data,
        base=>$url,
        title=>$title,
    );
}

return new MyPlace::URLRule::Rule::0_555duo_net;
1;

__END__

#       vim:filetype=perl


