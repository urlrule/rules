#!/usr/bin/perl -w
#http://en.wikipedia.org/w/index.php?title=List_of_pornographic_actresses_by_decade&printable=yes
#Tue Nov 25 00:40:43 2014
use strict;
no warnings 'redefine';


=method1
sub apply_rule {
 return (
       '#use quick parse'=>1,
       'data_exp'=>undef,
       'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
 );
}
=cut

use MyPlace::URLRule::Utils qw/get_url/;

sub apply_rule {
    my ($url,$rule) = @_;
	my $html = get_url($url,'-v');
    my $title = undef;
    my @data;
	my @html = split(/\n/,$html);
	foreach(@html) {
		if(m{<li>[\s\d]*<a[^>]+>([^<]+)</a>}) {
			push @data,$1;
		}
		elsif(m/<li>[\s\d]*([^<]+)</) {
			push @data,$1;
		}
		if(m/<td>[\s\d]*<a[^>]+>([^<]+)<\/a>/) {
			push @data,$1;
		}
		elsif(m/<td>[\s\d]*([^<]+)<\/td>/) {
			push @data,$1;
		}
	}
    return (
        count=>scalar(@data),
        data=>\@data,
        base=>$url,
        title=>$title,
    );
}

=cut

1;

__END__

#       vim:filetype=perl
