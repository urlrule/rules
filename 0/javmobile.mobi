#!/usr/bin/perl -w
#DOMAIN : javmobile.mobi
#AUTHOR : xiaoranzzz <xiaoranzzz@MYPLACE>
#CREATED: 2019-01-25 02:14
#UPDATED: 2019-01-25 02:14
#TARGET : https://javmobile.mobi/to/41144/%E5%87%B0%E3%81%8B%E3%81%AA%E3%82%81%E3%81%AE%E3%80%81%E3%81%84%E3%81%A3%E3%81%B1%E3%81%84%E3%82%B3%E3%82%B9%E3%81%A3%E3%81%A6%E8%90%8C%E3%81%88%E3%81%A6%E3%82%A4%E3%81%93%E3%81%86%EF%BC%81-abp-530.html
#URLRULE: 2.0
package MyPlace::URLRule::Rule::0_javmobile_mobi;
use MyPlace::WWW::Utils qw/get_url expand_url create_title_utf8/;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

=method1
sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
	   'data_exp'=>undef,
	   'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}
=cut


sub apply_rule {
	my $self = shift;
    my ($url,$rule) = @_;
	my $rurl = $url;
	$rurl =~ s{javmobile.mobi/to/}{javmovies.mobi/mov/};
	my $html = get_url($rurl,'-v');
    my $title = undef;
    my @data;
    my @pass_data;
	my %info;
	while($html =~ m/property="og:([^"]+)"[^>]+content="([^"]+)"/g) {
		$info{$1} = $2;
	}
	if(!$info{"video:url"}) {
		if($html =~ m/<source[^>]+src="([^"]+)/) {
			$info{"video:url"} = $1;
		}
	}
	if(!$info{"video:url"}) {
		return (error=>"Error parsing page");
	}
	my $vurl = expand_url($info{"video:url"});
	$vurl = $info{"video:url"} unless($vurl);
	$title = create_title_utf8($info{title});
	push @data,"m3u8:$vurl\t$title.ts";
	push @data,$info{image} . "\t" . $title . ".jpg" if($info{image});
    #my @html = split(/\n/,$html);
    return (
        count=>scalar(@data),
        data=>\@data,
        base=>$url,
    );
}

return new MyPlace::URLRule::Rule::0_javmobile_mobi;
1;

__END__

#       vim:filetype=perl
