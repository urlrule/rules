#!/usr/bin/perl -w
#DOMAIN : xhamster.one
#AUTHOR : xiaoranzzz <xiaoranzzz@MYPLACE>
#CREATED: 2019-02-01 03:14
#UPDATED: 2019-02-01 03:14
#TARGET : https://xhamster.one/videos/spyfam-step-mom-christiana-cinn-fucks-big-dick-step-son-7731170
#URLRULE: 2.0
package MyPlace::URLRule::Rule::0_xhamster_one;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

=method1
sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
	   'data_exp'=>undef,
	   'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}
=cut

use MyPlace::URLRule::Utils qw/get_url create_title url_getname/;

sub set_info {
	my $info = shift;
	my $key = shift;
	my $value = shift;
	return unless($value);
	$key = lc($key);
	return if($info->{$key});
	$info->{$key} = $value;
}
sub apply_rule {
	my $self = shift;
    my ($url,$rule) = @_;
	my $html = get_url($url,'-v');
    my $title = undef;
    my @data;
	my %info;
	my @html = split(/\n/,$html);
	foreach(@html) {
		s/\\\//\//g;
		if(m/href="([^"]*\/video-hls\/[^"]+)"/) {
			set_info(\%info,"hls",$1);
		}
		while(m/"([\w\d]+)"\s*:\s*'([^']+)'/g) {
			set_info(\%info,$1,$2);
		}
		while(m/"([\w\d]+)"\s*:\s*"([^"]+)"/g) {
			set_info(\%info,$1,$2);
		}
		while(m/"([\w\d]+)"\s*:\s*(\d+)/g) {
			set_info(\%info,$1,$2);
		}
	}
	my $hq = 0;
	foreach(keys %info) {
		if(m/^(\d+)p$/) {
			$hq=$1 if($1>$hq);
		}
	}
	$hq = $hq . "p" if($hq);
	$hq = "hls" if($info{hls});
	unless($info{$hq}) {
		return (error=>"Error parsing page",page=>\%info);
	}
	my $urlname = url_getname($url);
	foreach($info{thumburl}) {
		next if(!$_);
		my $name = url_getname($_);
		$name =~ s/\.m3u8$/.ts/g;
		push @data,$_ . "\t" . $urlname . "_" . $name;
	}
	if($info{$hq}) {
		push @data,$info{hls} . "\t" . $urlname . ".mp4";
	}
	#	push @data,$info{thumburl} . "\t$title.jpg" if($info{thumburl});
	#push @data,$info{$hq} . "\t$title.mp4";


    return (
		page=>\%info,
        count=>scalar(@data),
        data=>\@data,
        base=>$url,
    );
}

return new MyPlace::URLRule::Rule::0_xhamster_one;
1;

__END__

#       vim:filetype=perl


