#!/usr/bin/perl -w
#http://btkitty.org/torrent/BcEHAQAwCAMwS-UzOTz_FpYQpbWPy8Y5vxiUKOK4TEUXyQh09wc.html
#Tue Feb  3 01:25:37 2015
use strict;
no warnings 'redefine';

=method1
sub apply_rule {
 return (
 #Set quick parsing method on
       '#use quick parse'=>1,

#Specify data mining method
       'data_exp'=>'<h2>([^<]+)<.+?class=\'infohash\'>([^<]+).+?href=\'https?:\/\/storebt.com\/torrent\/([^\/\.]+)',
       'data_map'=>'"https://storebt.com/down/$3/$1.torrent\t$1_" . uc($2) . ".torrent"',

#Specify data mining method for nextlevel
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,

#Specify pages mining method
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,

       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
 );
}
=cut

use MyPlace::URLRule::Utils qw/get_url js_unescape/;

my %LNG = (
	'种子哈希'=>'Infohash',
	'下载地址'=>'Download',
	'种子名称'=>'Name',
	'种子大小'=>'Size',
	'文件列表'=>'File List',
	'磁力链接'=>'Magnet',
);
sub apply_rule {
    my ($url,$rule) = @_;
	my $html = get_url($url,'-v');
	#print STDERR $html,"\n";
    my $title = undef;
    my @data;
    my @pass_data;
	$html =~ s/[\n\r]+//g;
    my @html = split(/<dt/,$html);
	my %info;
	foreach(@html) {
		if(m/^[^>]*>(.+?)<\/dt>[^<]*<dd[^>]*>(.+?)<\/dd>/) {
			my $k = $1;
			my $v = $2;
			$k =~ s/<[^>]*>//g;
			if($LNG{$k}) {
				$k = $LNG{$k};
			}
			next if($k eq 'Files list');
			if($v =~ m/.*decodeURIComponent\(([^\)]+)\)/) {
				$v = join("",split(/["+]/,$1));
			}
			if($v =~ m/<a[^>]+href='([^']+)'/) {
				$v = $1;
			}
			else {
				$v =~ s/<[^>]*>//g;
			}
			$v = js_unescape($v);	
			$v =~ s/\s*\[email&#160;protected\]\s*//g;
			$info{$k} = $v;
			#print STDERR "$k => $v\n";
		}
		elsif(m/\<h2\>404 Not Found.*<h2[^>]+>([^<]+)/) {
			return (error=>$1,info=>\%info);
		}
	}
	if(!$info{Download}) {
		return (error=>'Error parsing source',info=>\%info);
	}
	$info{Download} =~ s/^http/https/;
	$info{Download} =~ s/\/torrent\//\/down\//;
	$info{Download} =~ s/\.html$/\.torrent/;
	$info{Name} =~ s/\.torrent$// if($info{Name}); 
	foreach my $key('Infohash','Magnet Link') {
		next unless($info{$key});
		if($info{$key} =~ m/^document\.write\((.+)\);?$/) {
			$info{$key} = $1;
			$info{$key} =~ s/['+]//g;
		}
	}

	$title = uc($info{Infohash} || "") . ".torrent"; 
	$title = $info{Size} . "_" . $title if($info{Size});
	$title = $info{Name} . "_" . $title if($info{Name});
	$title =~ s/^\s+//;
	$title =~ s/\s+$//;
	if($info{Download} =~ m/^https?:\/\/(?:storetorrents|savebt)\./i) {
		$info{Download} = 'magnet:?xt=urn:btih:' . $info{Infohash} . "&dn=" . $title;
	}
	push @data,$info{Download} . "\t" . $title;
	
    return (
		info=>\%info,
        count=>scalar(@data),
        data=>\@data,
    );
}

=cut

1;

__END__

#       vim:filetype=perl
