#!/usr/bin/perl -w
#DOMAIN : disks.oldos.net
#AUTHOR : xiaoranzzz <xiaoranzzz@MYPLACE>
#CREATED: 2018-12-30 00:29
#UPDATED: 2018-12-30 00:29
#TARGET : http://disks.oldos.net/OperatingSystems/
#URLRULE: 2.0
package MyPlace::URLRule::Rule::0_disks_oldos_net;
use MyPlace::URLRule::Utils qw/get_url create_title extract_title/;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

=method1
sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
	   'data_exp'=>undef,
	   'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}
=cut


sub apply_rule {
	my $self = shift;
    my ($url,$rule) = @_;
	my $html = get_url($url,'-v');
    my $title = undef;
    my @data;
    my @pass_data;
	my @pass_name;
    my @html = split(/\n/,$html);
	foreach(@html) {
		if(m/<img[^>]+alt="\[DIR\]"[^>]*>\s*<a[^>]+href="([^"]+\/)"[^>]*>(.+?)<\/a/) {
			push @pass_data,$1;
			push @pass_name,create_title($2);
		}
		elsif(m/<img[^>]+alt=[^>]*>\s*<a[^>]+href=".*\?C=/) {
			next;
		}
		elsif(m/<img[^>]+alt=[^>]*>\s*<a[^>]+href="([^"]+)"[^>]*>(.+?)<\/a/) {
			push @data,$1 . "\t" . create_title($2);
		}
	}
    return (
        count=>scalar(@data),
        data=>\@data,
        pass_count=>scalar(@pass_data),
        pass_data=>\@pass_data,
		pass_name=>\@pass_name,
        base=>$url,
        title=>$title,
		samelevel=>1,
    );
}

return new MyPlace::URLRule::Rule::0_disks_oldos_net;
1;

__END__

#       vim:filetype=perl


