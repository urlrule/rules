#!/usr/bin/perl -w
#weipai.cn
#Wed Nov 20 01:02:45 2013
use strict;
no warnings 'redefine';

#http://www.weipai.cn/user/moreOwnVideos/uid/52648e589f6c00cd1a8fde4e?page=1

use MyPlace::Weipai qw/get_url safe_decode_json/;
use MyPlace::URLRule::Utils qw//;
use MyPlace::String::Utils qw/no_empty/;
use Encode qw/find_encoding/;
my $utf8 = find_encoding('utf8');
use utf8;




sub extract_video {
	my @html = split("\n","@_");
	my %info = (
		video=>'',
		year=>'',
		month=>'',
		day=>'',
		hour=>'',
		minute=>'',
		second=>'',
		title=>'',
		length=>'',
		error=>'',
		big_title=>'',
	);
	foreach(@html) {
		#print STDERR "LINE:$_\n\n";
		if((!$info{user_name}) and m/<span class="name" title="([^"]+)"/) {
			$info{user_name}=$1;
		}
		if((!$info{user_id}) && m/class="face[^>]+><img src="[^"]*weipai\.cn\/avatar\/[^"]+\/([^\/\-]+)-?\d{10}\.jpg"/) {
			$info{user_id} = $1;
		}
		if((!$info{video_id}) && m/onclick="\$\.playVideo\('([^']+)'/) {
			$info{video_id} = $1;
		}
		if((!$info{title}) && m/<span class="(?:video_title|desc)">(.+)<\/span/) {
			$info{title} = extract_title($1);
		}
		#if((!$info{minute}) && m/<span class="video_detail">\s*\d+月\d+日\s+(\d+):(\d+)/) {
		#	$info{minute} = $2;
		#	$info{hour} = $1;
		#}
		if((!$info{video})) {
			if(m/<img[^>]*src="(http:\/\/(?:v|aliv)\.weipai\.cn\/(?:video|\d+)\/[^"]+)/) {
				$info{cover} = $1;
				$info{video} = $info{cover}; 
				$info{video} =~ s/\.([^\/]+)$//g;
			}
			elsif(m/pic:"([^"]+\.jpg)"/) {
				$info{cover} = $1;
				$info{video} = $info{cover}; 
				$info{video} =~ s/\.([^\/]+)$//g;
			}
		}
		if($info{video} =~ m/\/(\d\d\d\d)(\d+)\/(\d+)\/(\d+)\//) {
			($info{year},$info{month},$info{day},$info{hour}) = ($1,$2,$3,$4);
		}

		if((!$info{error}) && m/<div class="tab selected">出错啦<span class="end">/) {
			$info{error} = 1;
		}
		if((!$info{big_title}) && m/<div class=box_big_title>([^<]+)/) {
			$info{big_title} = $1;
		}
		else {
			#print STDERR "LINE MATCH NOTHING:$_\n";
		}
	}
	return %info;
}
sub extract_title {
	my $title = shift;
	return unless($title);
	$title =~ s/\@微拍小秘书//g;
	$title =~ s/”//g;
	$title =~ s/<[^.>]+>//g;
	$title =~ s/\/\?\*'"//g;
	$title =~ s/&amp;amp;/&/g;
	$title =~ s/&amp;/&/g;
	$title =~ s/&hellip;/…/g;
	$title =~ s/&[^&]+;//g;
#	$title =~ s/\x{1f60f}|\x{1f614}|\x{1f604}//g;
#	$title =~ s/[\P{Print}]+//g;
#	$title =~ s/[^\p{CJK_Unified_Ideographs}\p{ASCII}]//g;
	$title =~ s/[^{\p{Punctuation}\p{CJK_Unified_Ideographs}\p{CJK_SYMBOLS_AND_PUNCTUATION}\p{HALFWIDTH_AND_FULLWIDTH_FORMS}\p{CJK_COMPATIBILITY_FORMS}\p{VERTICAL_FORMS}\p{ASCII}\p{LATIN}\p{CJK_Unified_Ideographs_Extension_A}\p{CJK_Unified_Ideographs_Extension_B}\p{CJK_Unified_Ideographs_Extension_C}\p{CJK_Unified_Ideographs_Extension_D}]//g;
#	$title =~ s/[\p{Block: Emoticons}]//g;
	#print STDERR "\n\n$title=>\n", length($title),"\n\n";
	$title =~ s/\s{2,}/ /g;
	$title =~ s/[\r\n\/\?:\*\>\<\|]+/ /g;
	$title =~ s/_+$//;
	my $maxlen = 70;
	if(length($title) > $maxlen) {
		$title = substr($title,0,$maxlen);
	}	
	$title =~ s/^\s+//;
	$title =~ s/\s+$//;
	$title = $utf8->encode($title);
	return $title;
}

sub build_data {
	my $FULLNAME = shift;
	if(!$FULLNAME) {
		return;
	}
	elsif($FULLNAME eq '#FULLNAME') {
		$FULLNAME = 1;
	}
	else {
		unshift @_,$FULLNAME;
		$FULLNAME = undef;
	}
	my %info = @_;
	return unless($info{video});
		if(!$info{title}) {
			$info{title} = $info{video};
			$info{title} =~ s/^.*[\/\\]//;
		}
		#use Data::Dumper;print STDERR Dumper(\%info);
		my $filename = "$info{year}$info{month}$info{day}$info{hour}$info{minute}" .
			no_empty($info{title},"_") . no_empty($info{length},"[","]");
		$filename =~ s/[:\/\\]+/_/g;
		$filename =~ s/[*?!]+//g;
		
		if($FULLNAME) {
			foreach(qw/nickname username user_name/) {
				$info{$_} = $utf8->encode($info{$_}) if($info{$_});
			}
			$filename = join("_",(
					($info{nickname} || $info{username} || $info{user_name} || ''),
					($filename || ''),
					($info{video_id} || $info{blog_id} || ''),
					($info{user_id} || $info{uid} || '')
				)
			);
			$filename =~ s/^_+//;
			$filename =~ s/_+$//;
		}

		my $ext = ".mov";
		#$info{cover} . ".mov.3in1.jpg" . "\t" . $filename . ".3in1.jpg",
		my @data;
		push @data, $info{cover} . "\t" . $filename . ".jpg";
		push @data,$info{video} . $ext . "\t" . $filename . $ext;
		push @data,'http://www.weipai.cn/video/' . ($info{video_id} || $info{blog_id}) . "\t" . $filename . ".ts";
		#if($info{video_play_url}) {
		#	push @data,$info{video_play_url} . "\t" . $filename . ".ts";
		#}
		return @data;
}


sub apply_rule_video {
    my ($url,$rule) = @_;
#	my $html = $utf8->encode(get_url($url,'-v'));
	my $html = MyPlace::URLRule::Utils::get_url($url,'-v');
	#$html = $utf8->decode($html);
	
    my $title = undef;
    my @data;
    my @pass_data;
	my %info = extract_video($html);
		foreach my $url (build_data(%info)) {
			push @data,$url if($url);
		}
	return (
		info=>\%info,
		count=>scalar(@data),
		data=>\@data,
		base=>$url
	);
}

sub extract_video_list {
	my $vlist = shift;
	return unless($vlist and @$vlist);
	my $FLAGS = shift;
	my @data;
	foreach my $video (@$vlist) {
		$video->{cover} = $video->{video_screenshot} || $video->{video_screenshots} || $video->{video_screenshots_v};
		$video->{cover} =~ s/\/+ppp\/+video\/+/\/video\//g;
		$video->{cover} =~ s/\.s\.\d+\.jpg$/.jpg/;
		$video->{cover} =~ s/\.mov\.3in1\.jpg$/.jpg/;
		next unless($video->{cover});
		$video->{video} = $video->{cover};
		$video->{video} =~ s/\.([^\/]+)$//;
#		$video->{video_intro} ||= $video->{video_desc};
		$video->{title} = $video->{video_intro} || $video->{video_desc};
		$video->{title} = extract_title($video->{title});
#		$video->{title} = $video->{video_intro};# extract_title($video->{video_intro} || $video->{video_desc});
		if($video->{cover} =~ m/\/(\d\d\d\d)(\d\d)\/(\d\d)\/(\d+)\//) {
			@{$video}{qw/year month day hour minute/} = ($1,$2,$3,$4,'');
		}
		#use Data::Dumper;print Data::Dumper->Dump([$video],['$video']);
		if($FLAGS) {
			push @data,build_data($FLAGS,%$video);
		}
		else {
			push @data,build_data(%$video);
		}
	}
	return @data;
}

sub apply_rule_video_uuid {
	my $url = shift;
	my $html = get_url($url,'-v');
	if($html =~ m/url\s*:\s*"(http:\/\/www\.weipai\.cn\/video\/([^\/]+)")/) {
		return apply_rule_video_json('http://w1.weipai.cn/user_video_list?blog_id=' . $1,@_);
	}
	elsif($html =~ m[video/download/id/([^/]+)/]) {
		return apply_rule_video_json('http://w1.weipai.cn/user_video_list?blog_id=' . $1,@_);
	}
	else {
		return (
			error=>"Failed parsing page: $url",
		);
	}
}

sub apply_rule_video_play {
	my $url = shift;
}

sub apply_rule_video_json {
	my $url = shift;
	my $rule = shift;
	my $FLAGS = shift;

	if(!$FLAGS) {}
	elsif($FLAGS eq '#FULLNAME') {
		die($FLAGS);
	}
	else {
		unshift @_,$FLAGS;
		$FLAGS = undef;
	}

#	my $json = MyPlace::Weipai::_encode(safe_decode_json(get_url($url,'-v')));
	my $json = safe_decode_json(get_url($url,'-v'));
	print STDERR $json->{reason},"\n" if($json->{reason});
#	use Data::Dumper;print STDERR Data::Dumper->Dump([$json],['$json']);
#	print STDERR $json->{video_list}[0]->{video_desc};
#	die();
	my @data = extract_video_list($json->{video_list},$FLAGS);
	return (
		count=>scalar(@data),
		data=>\@data,
		base=>$url,
		info=>$json,
	);
}

sub apply_rule {
	my $url = shift;
	my $rule = shift;
	
#	use Data::Dumper;
	my @failback_data = @{$rule->{failback_data}} if($rule->{failback_data});


	my %r;

	my $FULLNAME = 0;
	if($url =~ m/#FULLNAME/) {
		$FULLNAME = 1;
		$url =~ s/#FULLNAME//;
	}
	elsif($rule->{options} && $rule->{options}->{fullname}) {
		$FULLNAME = 1;
	}

#	if($url =~ m/weipai\.cn\/video/) {
#		%r = apply_rule_video($url,$rule,@_);
#	}
#	elsif(1) {
#		%r = (
#			error=>'Code needs update, sign checking failed',
#		);
#	}
	if($url =~ m/http:\/\/(?:aliv\.|v\.)weipai\.cn|http:\/\/oldvideo\.qiniudn\.com/) {
		$url =~ s/\.(?:p\.jpg|p\d+\.jpg|p\.\d+\.jpg|\d+\.jpg|mov|flv|mp4|f4v)$/.mov.3in1.jpg/;
		$url =~ s/\/thumbnail\/.*\/video\//\/video\//;
		return (
			data => [
				extract_video_list([{
					'video_screenshot',$url,
				}],($FULLNAME ? ('#FULLANME'):()))
			],
			count => 1,
		);
	}
	elsif($url =~ m/weipai\.cn\/(?:share\/flash\/|video\/)uuid\/([^\?\s%\_\&\#\/]+)/) {
		unshift @_,'#FULLNAME' if($FULLNAME);
		%r = apply_rule_video_uuid($url,$rule,@_);
	}
	elsif($url =~ m/weipai\.cn\/(?:share\/flash\/|video\/)([^\?\s%\_\&\#\/]+)/) {
		unshift @_,'#FULLNAME' if($FULLNAME);
#		%r = apply_rule_video_play('http://share.weipai.cn/video/play/id/' . $1,$rule,@_);
		%r = apply_rule_video_json('http://w1.weipai.cn/user_video_list?blog_id=' . $1,$rule,@_);
	}
	elsif($url =~ m/user_video_list\?/) {
		unshift @_,'#FULLNAME' if($FULLNAME);

		%r =  apply_rule_video_json($url,$rule,@_);
	}
	elsif($url =~ m/weipai\.cn\/video/) {
		%r = apply_rule_video($url,$rule,@_);
	}
	elsif($url =~ m/\/review\/video/) {
		#http://www.weipai.cn/review/video?uid=508775398134943b58000051&os=android
		my @data;
		my $html = get_url($url,'-v');
		my @data_failed;
		#	print STDERR $html,"\n";
		while($html =~ m/"id":"([^"]+)"\s*,\s*"poster":"([^"]+)"\s*,\s*"url":"([^"]+)"/g) {
			my ($id,$poster,$url) = ($1,$2,$3);
			$poster =~ s/\\\//\//g;
			$url =~ s/\\\//\//g;
			$url =~ s/\.m3u8$/\/500k\.mp4/;
			my $videoid = $poster;
			$videoid =~ s/^.*\///;
			$videoid =~ s/\..*$//;
			my $videoext = $url;
			$videoext =~ s/^.*\.([^\.]+)$/.$1/;
			push @data,"http://www.weipai.cn/video/$id#FULLNAME";
			push @data_failed,"$poster\t$id\_$videoid.jpg","$url\t$id\_$videoid$videoext";
		}
		return (
			pass_count=>scalar(@data),
			pass_data=>\@data,
			data_failed=>\@data_failed,
			title=>'#ToReview',
			pass_level=>0,
			level=>0,
		);
	}

	if(%r) {
		if(@failback_data) {
			$r{data} = [@failback_data] if(!$r{data});
		}
		return %r;
	}

	

	my $info = safe_decode_json(get_url($url,'-v'));
	$r{info} = $info;
	my $uid = $info->{user_id};
	my @video_list;
	my $count = 0;
	my @data;
	if($info->{"diary_list"}) {
		foreach(@{$info->{"diary_list"}}) {
			if($_->{video_list}) {
				my $vl = $_->{video_list};
				next unless($vl and @$vl);
				push @video_list,$vl;
			}
		}
	}
	if($info->{'user_video_list'}) {
		push @video_list,$info->{'user_video_list'};
	}
	foreach my $vl(@video_list) {
		foreach my $v(@$vl) {
			my %vd  = apply_rule_video_json('http://w1.weipai.cn/user_video_list?blog_id=' . $v->{blog_id} || $v->{video_id});
			push @data,@{$vd{data}} if($vd{data});
		}	
	}
	$r{count} = scalar(@data);
	$r{data} = \@data;
	$r{info} = $info;
	if($r{count} > 0 and $info->{next_cursor}) {
		$r{level} = 0;
		$r{pass_data} = [
			join("&",(
				 'http://w1.weipai.cn/home_user?day_count=7&relative=after',
				 "user_id=$uid",
				 "cursor=" . $info->{next_cursor}
				)
			)
		];
		$r{pass_count} = 1;
	}
	return %r;
}


1;

__END__

#       vim:filetype=perl
