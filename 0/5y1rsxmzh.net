#!/usr/bin/perl -w
#DOMAIN : m2.5y1rsxmzh.net
#AUTHOR : xiaoranzzz <xiaoranzzz@MYPLACE>
#CREATED: 2020-02-14 03:06
#UPDATED: 2020-02-14 03:06
#TARGET : https://m2.5y1rsxmzh.net/pw/read.php?tid=4609351
#URLRULE: 2.0
package MyPlace::URLRule::Rule::0_m2_5y1rsxmzh_net;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

=method1
sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
	   'data_exp'=>undef,
	   'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}
=cut

use MyPlace::WWW::Utils qw/get_url get_safename url_getname create_title_utf8/;

sub apply_rule {
	my $self = shift;
    my ($url,$rule) = @_;
	my $html = get_url($url,'-v');
    my $title = undef;
    my @data;
    my @pass_data;
	my $filename;
	if($html =~ m/<span id="subject_tpc">(.+?)<\/span/) {
		$title = create_title_utf8($1);
	}
	if($html =~ m/<iframe[^>]*src="([^"]+)"/) {
		my $src = $1;
		$src =~ s/&#46;/\./g;
		push @pass_data,$src;
	}
    return (
        count=>scalar(@data),
        pass_count=>scalar(@pass_data),
        pass_data=>\@pass_data,
        base=>$url,
        title=>$title,
		level=>0,
    );
}

return new MyPlace::URLRule::Rule::0_m2_5y1rsxmzh_net;
1;

__END__

#       vim:filetype=perl


