#!/usr/bin/perl -w
#DOMAIN : hg_22.xyz
#AUTHOR : xiaoranzzz <xiaoranzzz@MYPLACE>
#CREATED: 2020-02-16 01:39
#UPDATED: 2020-02-16 01:39
#TARGET : https://hg_22.xyz/index.php/vod/type/id/6.html 1
#URLRULE: 2.0
package MyPlace::URLRule::Rule::1_hg_22_xyz;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

=method1
sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
	   'data_exp'=>undef,
	   'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}
=cut

use MyPlace::WWW::Utils qw/url_getfull get_url create_title_utf8 get_safename url_getname/;

sub apply_rule {
	my $self = shift;
    my ($url,$rule) = @_;
	my $html = get_url($url,'-v');
    my $title = undef;
    my @data;
    my @pass_data;
    my @html = split(/entry-title/,$html);
	foreach(@html) {
		if(m/<a[^>]+href="([^"]+)[^>]*><img[^>]+data-original="([^"]+)[^>]+alt="([^"]+)/) {
			my %v = ();
			$self->get_print(url_getfull($1,$url),"url",\%v);
			$self->get_print(url_getfull($2,$url),"image",\%v);
			$self->get_print(create_title_utf8($3),"title",\%v);
			my $ext = $v{image};
			$ext =~ s/.*\.//;
			$ext = $ext ? ".$ext" : "";
			push @data,"urlrule:" . $v{url} . "\t" . $v{title} . "\.ts";
			push @data,$v{image} . "\t" . $v{title} . $ext;
			next;
		}
	}
    return (
        count=>scalar(@data),
        data=>\@data,
        pass_count=>scalar(@pass_data),
        pass_data=>\@pass_data,
        base=>$url,
        title=>$title,
    );
}

return new MyPlace::URLRule::Rule::1_hg_22_xyz;
1;

__END__

#       vim:filetype=perl


