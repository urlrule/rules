#!/usr/bin/perl -w
#DOMAIN : pornomilf.club
#AUTHOR : xiaoranzzz <xiaoranzzz@MyPlace>
#CREATED: 2021-02-23 03:05
#UPDATED: 2021-02-23 03:05
#TARGET : https://pornomilf.club/897-polozhil-ruku-mamy-na-svoj-chlen-kogda-smotreli-film.html
#URLRULE: 2.0
package MyPlace::URLRule::Rule::0_pornomilf_club;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

=method1
sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
	   'data_exp'=>undef,
	   'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}
=cut

use MyPlace::WWW::Utils qw/get_url get_safename url_getname/;

sub apply_rule {
	my $self = shift;
    my ($url,$rule) = @_;
	my $opts = $rule->{options} ? $rule->{options} : {};
	my $html = get_url($url,'-v');
    my @data;
    my @pass_data;
    my @html = split(/\n/,$html);
	foreach(@html) {
		next unless(m/(<a[^>]+class="item-link"[^>]*>)/);
		print $1,"\n";
		my $a = $1;
		next unless($a =~ m/href="([^"]+)"/);
		my $url = $1;
		my $title=url_getname($url);
		$title =~ s/\.[^\.]+$//;
		if(${title} =~ m/^\d+[_-]*(.+)/) {
			${title} = $1;
		}
		push @data,"urlrule:" . $url . "\t" . $title . ".mp4";
	}
    return (
        base=>$url,
        count=>scalar(@data),
        data=>\@data,
        pass_count=>scalar(@pass_data),
        pass_data=>\@pass_data,
        title=>undef,
    );
}

return new MyPlace::URLRule::Rule::0_pornomilf_club;
1;

__END__

#       vim:filetype=perl


