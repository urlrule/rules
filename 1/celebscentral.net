#!/usr/bin/perl -w
#http://lucy-pinder.celebscentral.net/celebrity/484/mode,pictures/
#Thu May 20 20:46:41 2010
use strict;

#================================================================
# apply_rule will be called with ($RuleBase,%Rule),the result returned have these meaning:
# $result{base}          : Base url to build the full url
# $result{work_dir}      : Working directory (will be created if not exists)
# $result{data}          : Data array extracted from url,will be passed to $result{action}(see followed)
# $result{action}        : Command which the $result{data} will be piped to,can be overrided
# $result{pipeto}        : Same as action,Command which the $result{data} will be piped to,can be overrided
# $result{hook}          : Hook action,function process_data will be called
# $result{no_subdir}     : Do not create sub directories
# $result{pass_data}     : Data array which will be passed to next level of urlrule
# $result{pass_name}     : Names of each $result{pass_data}
# $result{pass_arg}      : Additional arguments to be passed to next level of urlrule
#================================================================

sub apply_rule {
    my $rule_base= shift(@_);
    my %rule = %{shift(@_)};
    my %r;
    $r{base}=$rule_base;
    open FI,"-|","netcat \'$rule_base\'";
    my $prefix;
    my $pages=0;
    if($rule_base =~ /\/\/([^\.\/]+)/) {
        $r{work_dir}=$1;
        $r{work_dir} = ucfirst($r{work_dir});
        $r{work_dir} =~ s/-(\w)/ \u$1/g;
    }
    while(<FI>) {
        if(/href="([^"]+\/page,\s*)(\d+)\s*\/"/) {
            if($2 > $pages) {
                $pages=$2;
                $prefix=$1;
            }
        }
    }
    close FI;
    $r{no_subdir}=1;
    if($prefix) {
        $r{pass_data}=[map $prefix . $_,(1 .. $pages)];
    }
    return %r;
}


#       vim:filetype=perl
