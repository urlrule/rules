#!/usr/bin/perl -w
#http://www.vlook.cn/ta/qs/dWlkPTIxMDYwODk=
#Sat Apr 12 23:02:50 2014
use strict;
no warnings 'redefine';
use utf8;

=method1
sub apply_rule {
 return (
       '#use quick parse'=>1,
       'data_exp'=>undef,
       'data_map'=>undef,
       'pass_exp'=>'action-video="([^"]+)',
       'pass_map'=>'$1',
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
 );
}
=cut

use MyPlace::URLRule::Utils qw/get_url/;

sub apply_rule {
    my ($url,$rule) = @_;
    my $UID = undef;
	my $SUFFIX;
	if($url =~ m/qs\/([^#\?\&\/\\]+)(.+)$/) {
		$UID = $1;
		$SUFFIX = $2;
	}
	return (error=>"Invalid URL") unless($UID);
	my $PREFIX = "http://mo.vlook.cn/mobile/mta/home/qs/";
	my $murl = $PREFIX . $UID . $SUFFIX;	
	my $html = get_url($murl,'-v');
    my @pass_data;
    my @html = split(/<div class="video_pic2">/,$html);
	foreach(@html) {
		if(m/<a href="([^"]+)" class="personal_cont">/) {
			push @pass_data,$1;
		}
	}
    return (
        count=>0,
        data=>undef,
        pass_count=>scalar(@pass_data),
        pass_data=>\@pass_data,
        base=>$url,
        title=>$UID,
    );
}

=cut

1;

__END__

#       vim:filetype=perl
