#!/usr/bin/perl -w
#DOMAIN : xhdporno.club
#AUTHOR : eotect <eotect@MyPlace>
#CREATED: 2021-03-06 17:56
#UPDATED: 2021-03-06 17:56
#TARGET : https://xhdporno.club/video/mamka-v-krasnyh-chulkah-vstala-rakom-pered-zyatem-i-otdalas-v-glubokuyu-pilotku.html 1
#URLRULE: 2.0
package MyPlace::URLRule::Rule::1_xhdporno_club;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
       'data_exp'=>'class="preview_screen"[^>]*><a[^>]+href="([^"]+)',
       'data_map'=>'"urlrule:$1"',
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}

=method 2
use MyPlace::WWW::Utils qw/url_getfull get_url get_safename url_getname new_url_data/;

sub apply_rule {
	my $self = shift;
    my ($url,$rule) = @_;
	my $opts = $rule->{options} ? $rule->{options} : {};
	my $html = get_url($url,'-v');
    my @data;
    my @pass_data;
	my $m = 0;
	my $murl = $url;
	while($html =~ m/<a[^>]+href="([^"]*videoid=)(\d+)([^"]*)"/g) {
		if($2 > $m) {
			$murl = "$1$2$3";
			$m = $2;
		}
	}
	push @pass_data,url_getfull($murl,$url);
    #my @html = split(/\n/,$html);
    return (
        base=>$url,
        count=>scalar(@data),
        data=>\@data,
        pass_count=>scalar(@pass_data),
        pass_data=>\@pass_data,
        title=>undef,
    );
}

=cut


return new MyPlace::URLRule::Rule::1_xhdporno_club;
1;

__END__

#       vim:filetype=perl


