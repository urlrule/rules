#!/usr/bin/perl -w
#DOMAIN : pornomilf.club
#AUTHOR : xiaoranzzz <xiaoranzzz@MyPlace>
#CREATED: 2021-02-23 04:10
#UPDATED: 2021-02-23 04:10
#TARGET : https://pornomilf.club/search/###QUERY###/ 3
#URLRULE: 2.0
package MyPlace::URLRule::Rule::3_pornomilf_club;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

=method1
sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
	   'data_exp'=>undef,
	   'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}
=cut

use MyPlace::WWW::Utils qw/get_url url_getbase get_safename url_getname/;

sub apply_rule {
	my $self = shift;
    my ($url,$rule) = @_;
	my $opts = $rule->{options} ? $rule->{options} : {};
    my @data;
    my @pass_data;
	my $base = url_getbase($url);
	my $query = $url;
	$query =~ s/\/+$//;
	$query =~ s/^.+\///;
	my $s = $query;
	$s =~ s/\s+/\+/g;
	push @pass_data,$base . "/index.php?do=search&subaction=search&story=$s";
	$s = $query;
	$s =~ s/\b(\w)/\U$1/g;
	push @pass_data,$base . "/tags/$s/";
	$s = lc($query);
	$s =~ s/\s+/-/g;
	push @pass_data,$base . "/$s/";
    return (
        base=>$url,
        pass_count=>scalar(@pass_data),
        pass_data=>\@pass_data,
        title=>undef,
    );
}

return new MyPlace::URLRule::Rule::3_pornomilf_club;
1;

__END__

#       vim:filetype=perl


