#!/usr/bin/perl -w
#DOMAIN : www.tuho.tv
#AUTHOR : xiaoranzzz <xiaoranzzz@MyPlace>
#CREATED: 2016-08-14 02:41
#UPDATED: 2016-08-14 02:41
#TARGET : http://www.tuho.tv/share/live?uid=5511333 :common
#URLRULE: 2.0
package MyPlace::URLRule::Rule::common_www_tuho_tv;
use MyPlace::URLRule::Utils qw/get_url new_file_data/;
use MyPlace::String::Utils qw/strtime/;
use base 'MyPlace::URLRule::Rule';
use strict;
use warnings;

=method1
sub apply_rule {
	my $self = shift;
	return $self->apply_quick(
	   'data_exp'=>undef,
	   'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
	   'pages_limit'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
	);
}
=cut
use Encode qw/find_encoding/;
my $utf8 = find_encoding('utf8');
use utf8;
use MyPlace::LiveRecorder::TuhoTV qw/&get_userinfo/;

sub process_info {
	my ($url,$level,$rule) = @_;
	my $id;
	if($url =~ m/\/(\d+)$/) {
		$id = $1;
	}
	my %info = get_userinfo($id);
	return %info;
}

sub apply_rule {
	my $self = shift;
	my $url = shift;
	my $rule = shift;
	my $level = $rule->{level} || 0;
	my %info = process_info($url,$level,$rule);

	if($rule->{level_desc} and 'info' eq "$rule->{level_desc}") {
		return %info;
	}
	if($info{uid}) {
		my @data = ();
		push @data, $info{cover} . "\t" . "$info{uid}_$info{uname}.jpg";
		if($info{playlist}) {
			push @data, $info{playlist} . "\t$info{uid}_$info{uname}.mp4";
		}
		if($info{text}) {
			push @data, new_file_data("$info{uid}_$info{uname}.txt",@{$info{text}});
		}
		push @data,@{$info{data}} if(ref $info{data});
		return (
			%info,
			data=>\@data,
			count=>scalar(@data),
			title=>$info{uid},
		);
	}
	else {
		return (
			error=>'Failed parsing page',
		);
	}
}

return new MyPlace::URLRule::Rule::common_www_tuho_tv;
1;

__END__

#       vim:filetype=perl


