#!/usr/bin/perl -w
#Sun May 23 21:36:13 2010
use strict;

#================================================================
# apply_rule will be called with ($RuleBase,%Rule),the result returned have these meaning:
# $result{base}          : Base url to build the full url
# $result{work_dir}      : Working directory (will be created if not exists)
# $result{data}          : Data array extracted from url,will be passed to $result{action}(see followed)
# $result{action}        : Command which the $result{data} will be piped to,can be overrided
# $result{pipeto}        : Same as action,Command which the $result{data} will be piped to,can be overrided
# $result{hook}          : Hook action,function process_data will be called
# $result{no_subdir}     : Do not create sub directories
# $result{pass_data}     : Data array which will be passed to next level of urlrule
# $result{pass_name}     : Names of each $result{pass_data}
# $result{pass_arg}      : Additional arguments to be passed to next level of urlrule
#================================================================

#use MyPlace::Google;
#use MyPlace::HTTPGet;
#use MyPlace::HTML;

sub apply_rule {
	my ($url,$rule) = @_;
    my $key;
    my $params = "";
    if($url =~ /\/([^\/\?]+)\?(.*)$/) {
        $key = $1;
        $params=$2;
    }
    else {
        $key = $url;
        $key =~ s/^.*\///g;
    }
	my $pass_to = "http://SearchImage/MyPlace::Google::Search/$key" . ($params ? "?$params" : "");
	return (
		pass_count=>1,
		pass_data=>[$pass_to],
		level=>$rule->{level},
		no_subdir=>1,
	);
}
1;


#       vim:filetype=perl
