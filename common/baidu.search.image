#!/usr/bin/perl -w
#http://baidu.search.image
#Sun May 23 21:36:13 2010
use strict;

#================================================================
# apply_rule will be called with ($RuleBase,%Rule),the result returned have these meaning:
# $result{base}          : Base url to build the full url
# $result{work_dir}      : Working directory (will be created if not exists)
# $result{data}          : Data array extracted from url,will be passed to $result{action}(see followed)
# $result{action}        : Command which the $result{data} will be piped to,can be overrided
# $result{pipeto}        : Same as action,Command which the $result{data} will be piped to,can be overrided
# $result{hook}          : Hook action,function process_data will be called
# $result{no_subdir}     : Do not create sub directories
# $result{pass_data}     : Data array which will be passed to next level of urlrule
# $result{pass_name}     : Names of each $result{pass_data}
# $result{pass_arg}      : Additional arguments to be passed to next level of urlrule
#================================================================

#use MyPlace::Google;
#use MyPlace::HTTPGet;
#use MyPlace::HTML;

sub apply_rule {
    my $url = shift(@_);
    my %rule = %{shift(@_)};
    #$url is a fake url: baidu.search.image/keyword?imgsz=huge&start=
    my $level = $rule{level};
   # shift(@_);
    my $key;
    my $params = "";
    my @data;
    if($url =~ /\/([^\/\?]+)\?(.*)$/) {
        $key = $1;
        $params=$2;
    }
    else {
        $key = $url;
        $key =~ s/^.*\///g;
    }
    my @params = $params ? split('&',$params) : ();
    my $page_count = $level*10 + 1;
    #foreach my $startpage (1 .. 60) {
        open FI,"-|","baidu.search.image",$key,@params, "pages=$page_count";
        #startpage=$startpage";
        while(<FI>) {
            chomp;
            push @data,$_;
            if(@data>180) {
                &callback_process_data("baidu.search.image",\%rule,{no_subdir=>1,data=>[@data]});
                @data = ();
            }
        }
        close FI;
    #}
    return (
        no_subdir=>1,
        data=>[@data],
    );
}
1;


#       vim:filetype=perl
