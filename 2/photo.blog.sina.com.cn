#!/usr/bin/perl -w
#http://photo.blog.sina.com.cn/categorys/p/1278629132
#Mon May 17 17:39:16 2010
use strict;

#================================================================
# apply_rule will be called with ($RuleBase,%Rule),the result returned have these meaning:
# $result{base}          : Base url to build the full url
# $result{work_dir}      : Working directory (will be created if not exists)
# $result{data}          : Data array extracted from url,will be passed to $result{action}(see followed)
# $result{action}        : Command which the $result{data} will be piped to,can be overrided
# $result{pipeto}        : Same as action,Command which the $result{data} will be piped to,can be overrided
# $result{hook}          : Hook action,function process_data will be called
# $result{no_subdir}     : Do not create sub directories
# $result{pass_data}     : Data array which will be passed to next level of urlrule
# $result{pass_name}     : Names of each $result{pass_data}
# $result{pass_arg}      : Additional arguments to be passed to next level of urlrule
#================================================================
use MyPlace::URLRule::Utils qw/get_url/;

sub apply_rule {
    my $rule_base= shift(@_);
    my %rule = %{shift(@_)};
    my %r;
    $r{base}=$rule_base;
    my $prefix=$rule_base;
    if($rule_base =~ /(.+\/categorys\/p\/\d+)/) {
        $prefix = $1;
    }
	my @html = split "\n",get_url($rule_base,'-v');
    my $count = 1;
    foreach(@html) {
        my @match = $_ =~ m/\/categorys\/p\/\d+\/page(\d+)["']/g;
        foreach(@match) {
            $count = $_ if($_ > $count);
        }
    }
    push @{$r{pass_data}},$rule_base;
    for my $page (2 .. $count) {
        push @{$r{pass_data}},"$prefix/page$page";
    }
    $r{no_subdir}=1;
    return %r;
}
1;
