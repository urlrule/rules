#!/usr/bin/perl -w
#http://yahoo.search.image
#Sun May 23 21:36:13 2010
use strict;

#================================================================
# apply_rule will be called with ($RuleBase,%Rule),the result returned have these meaning:
# $result{base}          : Base url to build the full url
# $result{work_dir}      : Working directory (will be created if not exists)
# $result{data}          : Data array extracted from url,will be passed to $result{action}(see followed)
# $result{action}        : Command which the $result{data} will be piped to,can be overrided
# $result{pipeto}        : Same as action,Command which the $result{data} will be piped to,can be overrided
# $result{hook}          : Hook action,function process_data will be called
# $result{no_subdir}     : Do not create sub directories
# $result{pass_data}     : Data array which will be passed to next level of urlrule
# $result{pass_name}     : Names of each $result{pass_data}
# $result{pass_arg}      : Additional arguments to be passed to next level of urlrule
#================================================================

#use MyPlace::Google;
#use MyPlace::HTTPGet;
#use MyPlace::HTML;

sub apply_rule {
    my $url = shift(@_);
    my %rule = %{shift(@_)};

    #$url is a fake url: yahoo.search.image/keyword?imgsz=huge&start=
    my $key;
    my $params = "";
    my @data;
    if($url =~ /\/([^\/\?]+)\?(.*)$/) {
        $key = $1;
        $params=$2;
    }
    else {
        $key = $url;
        $key =~ s/^.*\///;
    }
    if($params) {
        open FI,"-|","yahoo.search.image",$key,"pages=8",split('&',$params);
    }
    else {
        open FI,"-|","yahoo.search.image",$key,"pages=8";
    }
    if(*FI) {
        while(<FI>) {
            chomp;
            push @data,$_;
        }
        close FI;
    }
    return (
        no_subdir=>1,
        data=>[@data],
    );
}
1;


#       vim:filetype=perl
1;
